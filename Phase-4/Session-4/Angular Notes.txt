install node js from link:
https://nodejs.org/en/download/
---------------------------------------------
STEP: 1 CHECKING THE VERSION OF NODE AND NPM
---------------------------------------------

1. TO CHECK THE VERSION OF NODE
>open cmd>node -v
	output:16.14.2
2. NPM manger-node package manager
----provides the bundles of packages which we can download directly using cmd
----ex. angular,react,view JS,TypeScript,bootstarp
----NPM installed AUtomatically whenever you Install node js in your system
----to check the version of NPM
>npm -v

	output: 8.5.0
-----------------------------------------------
STEP :2 INSTALLING TYPESCRIPT USING NPM
-----------------------------------------------
>npm install typescript -g

to check the version
>tsc -v

	output: 4.6.3


----prepare one first.ts file in visual studio code as below-------


let a:number;
a=56;

let b:number=12;

let fname:string="Nikunj Soni";

console.log(a+b);

console.log(fname);


function test(num1:number,num2:number):number{
    return num1+num2;
}
console.log(test(2,3));


--------------------------------------------------------------------

goto>terminal>newterminal>choose cmd

>tsc first.ts

you will see that a new file named 'first.ts' is automatically prepared in the folder

>node first.js

you will see output in console


prepare 'tsconfig.json' file: it is a file to configure JSON file


how .ts converts .js we can configure in this file


>tsc --init (will create tsconfig.json file and we can chheck the same)


----------------------------------------------------------------------------
STEP: 3 INSTALLING ANGULAR ON YOUR MACHINE
----------------------------------------------------------------------------

let's install angular

>npm install -g @angular/cli (OR npm i -g @angular/cli)


to check the version

>ng --version


let's create angular project
*****************************************

>ng new myapp (you can give any name)

	it will ask you two questions
	1. do you want to add angular routing ?: Y
	2. Choose CSS:CSS
once the app is prepared you need to change the directory in cmd 
>cd myapp


to start your angular app
>ng serve


once the app started goto the borwser and open localhost:4200 and hit enter

goto src>app>app.component.html file and edit the code whatever you want


<h1> My First Angular App</h1>


save it , it will be automatically updated in browser, that you cab check the same


****************************************************************************
STEP: 4 PREPARE ANGULAR COMPONENT
****************************************************************************

NOTE: add another terminal>cmd> and move to the root directory of app and execute the below code

>ng generate component header  (OR ng g c header)   ////header is name

goto> src>app>header>header.component.html and prepare the header 


<h1> Header Works!</h1>


goto >src>app>header>header.component.css and add a style


h1 {
    background-color: antiquewhite;
}

goto> header.component.ts and copy the selector name which is present inside

@component{

 selector: 'app-header',

}



goto> app.component.html

write as below code

<app-header></app-header>


save it and you will be able to see the output in your browser



similarly you can prepare footer component and integrate using above steps



----------------------------------------------------------------------------
STEP: 5 DATA BINDING
----------------------------------------------------------------------------

TYPES
1. SOURCE TO VIEW (.ts to .html)
2. VIEW TO SOURCE (.html to .ts)
3. SOURCE TO VIEW TO SOURCE (two way binding)


data bindings can be done in two ways
	1. Interpolation Binding {{}}
	2. Property Binding [ ]
let;s prepare binding component from node js and add following command


> ng g c binding ///binding is a name component


to bind the data goto binding.component.ts and add the following code at the last

 	name:string="Nikunj Soni";
  	url:string ="https://www.google.com";


goto>binding.component.html add the following




<h1>Data Binding</h1>

<!--use interpolation -->
<h2>Let's bind the data from source to view using interpolation</h2>

<hr>

<p>{{name}}</p>


<h1>let's bind the data from source to view using property Binding:[] :bind the value with attribute</h1>

<hr>

<a [href]="url">Connect to Google</a>



go to> app.component.html and copy the selector name tag


like below


<app-binding></app-binding>


save it and check the output in browser



***************************************************************************

STEP: 6 CLASS BINDING

***************************************************************************


---prepare one array of products in bindings.component.ts


 products=[{name:"pencile",price:"8.3",available:"06-05-2022",ratings:4.8},
            {name:"pen",price:"10",available:"10-05-2022",ratings:4.8},
            {name:"eraser",price:"5.5",available:"06-06-2022",ratings:4.8},
            {name:"scale",price:"8",available:"19-05-2022",ratings:4.8},
            {name:"strencil",price:"15",available:"31-05-2022",ratings:4.8},
            ]



goto>binding.component.html to print the array using table along with ngDirective



 <h3>Print JSON Array</h3>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Available</th>
            <th>Ratings</th>
        </tr>
    </thead>
    <tbody>
        <!--NgDirectives  eg: *ngFor-->
        <tr *ngFor="let p of products">
            <td>{{p.name}}</td>
            <td>{{p.price}}</td>
            <td>{{p.available}}</td>
            <td>{{p.ratings}}</td>

        </tr>
    </tbody>
</table>



[* NOTE: to implement bootstrap in angular app , include css and script tags from bootstrap official website to index.html file as below]


save it and check the output









